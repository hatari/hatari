Hatari CPU profile (Hatari v2.6.1)
Cycles/second:	8021247
Field names:	Executed instructions, Used cycles, Instruction cache misses, Data cache hits
Field regexp:	^\$?([0-9A-Fa-f]+) .*% \(([^)]*)\)$
ST_RAM:		0x000000-0x100000
ROM_TOS:	0xe00000-0xe00124
CARTRIDGE:	0xfa0000-0xfc0000
# disassembly with profile data: <instructions percentage>% (<sum of instructions>, <sum of cycles>, <sum of i-cache misses>, <sum of d-cache hits>)
00001100 4267                     clr.w -(a7) == $00017ff4 [003e]    0.00% (1, 10, 1, 0)
00001102 4879 0000 15da           pea.l $000015da                    0.00% (1, 16, 1, 0)
00001108 3f3c 003c                move.w #$003c,-(a7) == $00017ff4 [003e] 0.00% (1, 14, 1, 0)
0000110c 4e41                     trap #$01                          0.00% (1, 42, 3, 0)
0000110e 508f                     addaq.l #$08,a7                    0.00% (1, 0, 0, 0)
00001110 33c0 0000 1608           move.w d0,$00001608 [0040]         0.00% (1, 18, 2, 0)
00001116 49f9 0000 12ca           lea.l $000012ca tests,a4           0.00% (1, 8, 1, 0)
main_loop:
0000111c 2f1c                     move.l (a4)+ == $0000134a [00000000],-(a7) == $00017ff2 [1142003e] 0.00% (16, 256, 0, 0)
0000111e 6100 003a                bsr.w #$003a print == $0000115a    0.00% (16, 512, 48, 0)
00001122 588f                     addaq.l #$04,a7                    0.00% (16, 0, 0, 0)
00001124 4879 0000 15e6           pea.l $000015e6                    0.00% (16, 256, 16, 0)
0000112a 6100 002e                bsr.w #$002e print == $0000115a    0.00% (16, 512, 48, 0)
0000112e 588f                     addaq.l #$04,a7                    0.00% (16, 0, 0, 0)
00001130 2f1c                     move.l (a4)+ == $0000134a [00000000],-(a7) == $00017ff2 [1142003e] 0.00% (16, 256, 0, 0)
00001132 6100 0226                bsr.w #$0226 run_test == $0000135a 0.00% (16, 512, 48, 0)
00001136 588f                     addaq.l #$04,a7                    0.00% (16, 0, 0, 0)
00001138 4879 0000 15ea           pea.l $000015ea                    0.00% (16, 256, 16, 0)
0000113e 6100 001a                bsr.w #$001a print == $0000115a    0.00% (16, 512, 48, 0)
00001142 588f                     addaq.l #$04,a7                    0.00% (16, 0, 0, 0)
00001144 4a94                     tst.l (a4) == $0000134a [00000000] 0.00% (16, 256, 16, 0)
00001146 66d4                     bne.b #$d4 == $0000111c (F)        0.00% (16, 240, 30, 0)
00001148 3f39 0000 1608           move.w $00001608 [0040],-(a7) == $00017ff4 [003e] 0.00% (1, 24, 2, 0)
0000114e 3f3c 003e                move.w #$003e,-(a7) == $00017ff4 [003e] 0.00% (1, 10, 1, 0)
00001152 4e41                     trap #$01                          0.00% (1, 42, 3, 0)
00001154 588f                     addaq.l #$04,a7                    0.00% (1, 8, 1, 0)
00001156 4267                     clr.w -(a7) == $00017ff4 [003e]    0.00% (1, 6, 0, 0)
[...]
print:
0000115a 2f2f 0004                move.l ($0004,a7) == $00017ffa [00000000],-(a7) == $00017ff2 [1142003e] 0.00% (48, 1152, 48, 0)
0000115e 3f3c 0009                move.w #$0009,-(a7) == $00017ff4 [003e] 0.00% (48, 584, 48, 0)
00001162 4e41                     trap #$01                          0.00% (48, 2016, 144, 0)
00001164 5c8f                     addaq.l #$06,a7                    0.00% (48, 384, 48, 0)
00001166 70ff                     moveq #$ff,d0                      0.00% (48, 0, 0, 0)
00001168 206f 0004                movea.l ($0004,a7) == $00017ffa [00000000],a0 0.00% (48, 768, 48, 0)
strlenloop:
0000116c 5280                     addq.l #$01,d0                     0.00% (485, 3880, 485, 0)
0000116e 4a18                     tst.b (a0)+ == $000015f9 [00]      0.00% (485, 1946, 0, 0)
00001170 66fa                     bne.b #$fa == $0000116c (F)        0.00% (485, 7376, 922, 0)
00001172 2f2f 0004                move.l ($0004,a7) == $00017ffa [00000000],-(a7) == $00017ff2 [1142003e] 0.00% (48, 1152, 48, 0)
00001176 2f00                     move.l d0,-(a7) == $00017ff2 [1142003e] 0.00% (48, 384, 0, 0)
00001178 3f39 0000 1608           move.w $00001608 [0040],-(a7) == $00017ff4 [003e] 0.00% (48, 1152, 96, 0)
0000117e 3f3c 0040                move.w #$0040,-(a7) == $00017ff4 [003e] 0.00% (48, 556, 48, 0)
00001182 4e41                     trap #$01                          0.00% (48, 2016, 144, 0)
00001184 4fef 000c                lea.l ($000c,a7) == $00018002,a7   0.00% (48, 0, 0, 0)
out:
00001188 4e75                     rts  == $000000e0                  0.00% (144, 3840, 336, 0)
[...]
test_nop:
00001192 4e71                     nop                                0.00% (71, 0, 0, 0)
00001194 4e75                     rts  == $000000e0                  0.00% (71, 1704, 142, 0)
[...]
test_2nop:
000011a0 4e71                     nop                                0.00% (58, 0, 0, 0)
000011a2 4e71                     nop                                0.00% (58, 0, 0, 0)
000011a4 4e75                     rts  == $000000e0                  0.00% (58, 1392, 116, 0)
[...]
test_lsl1:
000011ae 7000                     moveq #$00,d0                      0.00% (34, 0, 0, 0)
000011b0 e1a9                     lsl.l d0,d1                        0.00% (34, 0, 0, 0)
000011b2 4e75                     rts  == $000000e0                  0.00% (34, 816, 68, 0)
[...]
test_lsl2:
000011bc 7006                     moveq #$06,d0                      0.00% (38, 0, 0, 0)
000011be e1a9                     lsl.l d0,d1                        0.00% (38, 0, 0, 0)
000011c0 4e75                     rts  == $000000e0                  0.00% (38, 912, 76, 0)
[...]
test_exg_dbra1:
000011d0 7400                     moveq #$00,d2                      0.00% (58, 464, 58, 0)
000011d2 4e71                     nop                                0.00% (58, 0, 0, 0)
000011d4 c141                     exg.l d0,d1                        0.00% (58, 464, 58, 0)
000011d6 51ca ffb0                dbf.w d2,#$ffb0 == $00001188 (F)   0.00% (58, 0, 0, 0)
000011da 4e75                     rts  == $000000e0                  0.00% (58, 1392, 116, 0)
[...]
test_exg_dbra2:
000011ea 7400                     moveq #$00,d2                      0.00% (19, 0, 0, 0)
000011ec c141                     exg.l d0,d1                        0.00% (19, 152, 19, 0)
000011ee 4e71                     nop                                0.00% (19, 0, 0, 0)
000011f0 51ca ff96                dbf.w d2,#$ff96 == $00001188 (F)   0.00% (19, 0, 0, 0)
000011f4 4e75                     rts  == $000000e0                  0.00% (19, 456, 38, 0)
[...]
test_exg_move1:
00001204 4e71                     nop                                0.00% (110, 880, 110, 0)
00001206 c141                     exg.l d0,d1                        0.00% (110, 0, 0, 0)
00001208 1220                     move.b -(a0) == $000015f8 [00],d1  0.00% (110, 400, 0, 0)
0000120a 4e75                     rts  == $000000e0                  0.00% (110, 2640, 220, 0)
[...]
test_exg_move2:
0000121a c141                     exg.l d0,d1                        0.00% (128, 0, 0, 0)
0000121c 4e71                     nop                                0.00% (128, 0, 0, 0)
0000121e 1220                     move.b -(a0) == $000015f8 [00],d1  0.00% (128, 456, 0, 0)
00001220 4e75                     rts  == $000000e0                  0.00% (128, 3072, 256, 0)
[...]
test_asr_add1:
0000122e 7002                     moveq #$02,d0                      0.00% (121, 0, 0, 0)
00001230 4e71                     nop                                0.00% (121, 968, 121, 0)
00001232 e061                     asr.w d0,d1                        0.00% (121, 0, 0, 0)
00001234 d260                     add.w -(a0) == $000015f7 [0a00],d1 0.00% (121, 442, 0, 0)
00001236 4e75                     rts  == $000000e0                  0.00% (121, 2904, 242, 0)
[...]
test_asr_add2:
00001244 7002                     moveq #$02,d0                      0.00% (8, 64, 8, 0)
00001246 e061                     asr.w d0,d1                        0.00% (8, 0, 0, 0)
00001248 4e71                     nop                                0.00% (8, 0, 0, 0)
0000124a d260                     add.w -(a0) == $000015f7 [0a00],d1 0.00% (8, 32, 0, 0)
0000124c 4e75                     rts  == $000000e0                  0.00% (8, 192, 16, 0)
[...]
test_cmp_beq1:
0000125a 4e71                     nop                                0.00% (44, 0, 0, 0)
0000125c b080                     cmp.l d0,d0                        0.00% (44, 352, 44, 0)
0000125e 6000 ff28                bra.w #$ff28 out == $00001188 (T)  0.00% (44, 704, 88, 0)
[...]
test_cmp_beq2:
0000126e b080                     cmp.l d0,d0                        0.00% (52, 0, 0, 0)
00001270 4e71                     nop                                0.00% (52, 416, 52, 0)
00001272 6000 ff14                bra.w #$ff14 out == $00001188 (T)  0.00% (52, 832, 104, 0)
[...]
test_sub_move1:
00001284 4242                     clr.w d2                           0.00% (34, 272, 34, 0)
00001286 9090                     sub.l (a0) == $000015f9 [00000200],d0 0.00% (34, 272, 0, 0)
00001288 3230 2000                move.w ($00,a0,d2.w) == $000015f9 [0000],d1 0.00% (34, 120, 0, 0)
0000128c 4e75                     rts  == $000000e0                  0.00% (34, 816, 68, 0)
[...]
test_sub_move2:
0000129c 9090                     sub.l (a0) == $000015f9 [00000200],d0 0.00% (121, 1936, 121, 0)
0000129e 4242                     clr.w d2                           0.00% (121, 0, 0, 0)
000012a0 3230 2000                move.w ($00,a0,d2.w) == $000015f9 [0000],d1 0.00% (121, 434, 0, 0)
000012a4 4e75                     rts  == $000000e0                  0.00% (121, 2904, 242, 0)
[...]
test_move_820a:
000012b2 1038 820a                move.b $ffff820a.w,d0              0.00% (8, 24, 0, 0)
000012b6 4e75                     rts  == $000000e0                  0.00% (8, 200, 16, 0)
[...]
test_move_8800:
000012c4 1038 8800                move.b $ffff8800.w,d0              0.00% (128, 872, 0, 0)
000012c8 4e75                     rts  == $000000e0                  0.00% (128, 3176, 256, 0)
[...]
testinit:
00001352 207c 0000 164a           movea.l #$0000164a,a0              0.00% (1032, 0, 0, 0)
00001358 4e75                     rts  == $000000e0                  0.00% (1032, 33024, 3096, 0)
run_test:
0000135a 202f 0004                move.l ($0004,a7) == $00017ffa [00000000],d0 0.00% (16, 256, 16, 0)
0000135e 48e7 1f1e                movem.l d3-d7/a3-a6,-(a7) == $00017ff2 0.00% (16, 1280, 16, 0)
00001362 2a40                     movea.l d0,a5                      0.00% (16, 0, 0, 0)
00001364 4879 0000 0000           pea.l $00000000                    0.00% (16, 384, 32, 0)
0000136a 3f3c 0020                move.w #$0020,-(a7) == $00017ff4 [003e] 0.00% (16, 196, 16, 0)
0000136e 4e41                     trap #$01                          0.00% (16, 672, 48, 0)
00001370 5c8f                     addaq.l #$06,a7                    0.00% (16, 128, 16, 0)
00001372 23c0 0000 15fa           move.l d0,$000015fa [00020000]     0.00% (16, 256, 16, 0)
00001378 23f9 0000 0010 0000 15fe move.l $00000010 [00e000e2],$000015fe [00e000e2] 0.00% (16, 640, 48, 0)
00001382 31fc 0765 8240           move.w #$0765,$ffff8240.w          0.00% (16, 188, 16, 0)
00001388 11fc 0002 820a           move.b #$02,$ffff820a.w            0.00% (16, 306, 32, 0)
loop:
0000138e 23f9 0000 0070 0000 1602 move.l $00000070 [00e000fa],$00001602 [00e000fa] 0.00% (1032, 33042, 2064, 0)
00001398 23fc 0000 15d0 0000 0070 move.l #$000015d0,$00000070 [00e000fa] 0.00% (1032, 33024, 3096, 0)
000013a2 33fc 0000 0000 1606      move.w #$0000,$00001606 [0001]     0.00% (1032, 20536, 2064, 0)
000013aa 4e72 2300                stop #$2300                       92.57% (32842328, 131398244, 2064, 0)
000013ae 4a79 0000 1606           tst.w $00001606 [0001]             0.00% (1032, 12280, 1032, 0)
000013b4 67d8                     beq.b #$d8 == $0000138e (T)        0.00% (1032, 8256, 1032, 0)
000013b6 23f9 0000 1602 0000 0070 move.l $00001602 [00e000fa],$00000070 [00e000fa] 0.00% (1032, 33024, 2064, 0)
000013c0 46fc 2700                move.w #$2700,sr                   0.00% (1032, 24768, 3096, 0)
000013c4 4eb9 0000 1352           jsr $00001352 testinit             0.00% (1032, 33024, 3096, 0)
000013ca 2f08                     move.l a0,-(a7) == $00017ff2 [1142003e] 0.00% (1032, 8256, 0, 0)
000013cc 3f00                     move.w d0,-(a7) == $00017ff4 [003e] 0.00% (1032, 12488, 1032, 0)
000013ce 41f8 8209                lea.l $ffff8209.w,a0               0.00% (1032, 8256, 1032, 0)
000013d2 7000                     moveq #$00,d0                      0.00% (1032, 0, 0, 0)
000013d4 1010                     move.b (a0) == $000015f9 [00],d0   3.33% (1180942, 14171444, 1180942, 0)
000013d6 67fc                     beq.b #$fc == $000013d4 (T)        3.33% (1180942, 18878560, 2359820, 0)
000013d8 4640                     not.w d0                           0.00% (1032, 8256, 1032, 0)
000013da e068                     lsr.w d0,d0                        0.00% (1032, 0, 0, 0)
000013dc 303c 0080                move.w #$0080,d0                   0.00% (1032, 8256, 1032, 0)
000013e0 907a 01a4                sub.w ($01a4,pc) == $00001586 [0000] nopno,d0 0.00% (1032, 12000, 1032, 0)
000013e4 d040                     add.w d0,d0                        0.00% (1032, 0, 0, 0)
000013e6 4efb 0002                jmp ($02,pc,d0.w=000013ea) == $000013ea 0.00% (1032, 20656, 2582, 0)
[...]
000013ec 4e71                     nop                                0.00% (8, 64, 8, 0)
000013ee 4e71                     nop                                0.00% (16, 0, 0, 0)
000013f0 4e71                     nop                                0.00% (24, 192, 24, 0)
000013f2 4e71                     nop                                0.00% (32, 0, 0, 0)
000013f4 4e71                     nop                                0.00% (40, 320, 40, 0)
000013f6 4e71                     nop                                0.00% (48, 0, 0, 0)
000013f8 4e71                     nop                                0.00% (56, 448, 56, 0)
000013fa 4e71                     nop                                0.00% (64, 0, 0, 0)
000013fc 4e71                     nop                                0.00% (72, 576, 72, 0)
000013fe 4e71                     nop                                0.00% (80, 0, 0, 0)
00001400 4e71                     nop                                0.00% (88, 704, 88, 0)
00001402 4e71                     nop                                0.00% (96, 0, 0, 0)
00001404 4e71                     nop                                0.00% (104, 832, 104, 0)
00001406 4e71                     nop                                0.00% (112, 0, 0, 0)
00001408 4e71                     nop                                0.00% (120, 960, 120, 0)
0000140a 4e71                     nop                                0.00% (128, 0, 0, 0)
0000140c 4e71                     nop                                0.00% (136, 1088, 136, 0)
0000140e 4e71                     nop                                0.00% (144, 0, 0, 0)
00001410 4e71                     nop                                0.00% (152, 1216, 152, 0)
00001412 4e71                     nop                                0.00% (160, 0, 0, 0)
00001414 4e71                     nop                                0.00% (168, 1344, 168, 0)
00001416 4e71                     nop                                0.00% (176, 0, 0, 0)
00001418 4e71                     nop                                0.00% (184, 1472, 184, 0)
0000141a 4e71                     nop                                0.00% (192, 0, 0, 0)
0000141c 4e71                     nop                                0.00% (200, 1600, 200, 0)
0000141e 4e71                     nop                                0.00% (208, 0, 0, 0)
00001420 4e71                     nop                                0.00% (216, 1728, 216, 0)
00001422 4e71                     nop                                0.00% (224, 0, 0, 0)
00001424 4e71                     nop                                0.00% (232, 1856, 232, 0)
00001426 4e71                     nop                                0.00% (240, 0, 0, 0)
00001428 4e71                     nop                                0.00% (248, 1984, 248, 0)
0000142a 4e71                     nop                                0.00% (256, 0, 0, 0)
0000142c 4e71                     nop                                0.00% (264, 2112, 264, 0)
0000142e 4e71                     nop                                0.00% (274, 0, 0, 0)
00001430 4e71                     nop                                0.00% (282, 2256, 282, 0)
00001432 4e71                     nop                                0.00% (290, 0, 0, 0)
00001434 4e71                     nop                                0.00% (298, 2384, 298, 0)
00001436 4e71                     nop                                0.00% (307, 0, 0, 0)
00001438 4e71                     nop                                0.00% (315, 2520, 315, 0)
0000143a 4e71                     nop                                0.00% (325, 0, 0, 0)
0000143c 4e71                     nop                                0.00% (334, 2672, 334, 0)
0000143e 4e71                     nop                                0.00% (343, 0, 0, 0)
00001440 4e71                     nop                                0.00% (351, 2808, 351, 0)
00001442 4e71                     nop                                0.00% (359, 0, 0, 0)
00001444 4e71                     nop                                0.00% (367, 2936, 367, 0)
00001446 4e71                     nop                                0.00% (375, 0, 0, 0)
00001448 4e71                     nop                                0.00% (383, 3064, 383, 0)
0000144a 4e71                     nop                                0.00% (391, 0, 0, 0)
0000144c 4e71                     nop                                0.00% (399, 3192, 399, 0)
0000144e 4e71                     nop                                0.00% (407, 0, 0, 0)
00001450 4e71                     nop                                0.00% (415, 3320, 415, 0)
00001452 4e71                     nop                                0.00% (423, 0, 0, 0)
00001454 4e71                     nop                                0.00% (431, 3448, 431, 0)
00001456 4e71                     nop                                0.00% (439, 0, 0, 0)
00001458 4e71                     nop                                0.00% (447, 3576, 447, 0)
0000145a 4e71                     nop                                0.00% (455, 0, 0, 0)
0000145c 4e71                     nop                                0.00% (463, 3704, 463, 0)
0000145e 4e71                     nop                                0.00% (471, 0, 0, 0)
00001460 4e71                     nop                                0.00% (479, 3832, 479, 0)
00001462 4e71                     nop                                0.00% (487, 0, 0, 0)
00001464 4e71                     nop                                0.00% (495, 3960, 495, 0)
00001466 4e71                     nop                                0.00% (503, 0, 0, 0)
00001468 4e71                     nop                                0.00% (511, 4088, 511, 0)
0000146a 4e71                     nop                                0.00% (519, 0, 0, 0)
0000146c 4e71                     nop                                0.00% (527, 4216, 527, 0)
0000146e 4e71                     nop                                0.00% (535, 0, 0, 0)
00001470 4e71                     nop                                0.00% (543, 4344, 543, 0)
00001472 4e71                     nop                                0.00% (551, 0, 0, 0)
00001474 4e71                     nop                                0.00% (559, 4472, 559, 0)
00001476 4e71                     nop                                0.00% (567, 0, 0, 0)
00001478 4e71                     nop                                0.00% (575, 4600, 575, 0)
0000147a 4e71                     nop                                0.00% (583, 0, 0, 0)
0000147c 4e71                     nop                                0.00% (591, 4728, 591, 0)
0000147e 4e71                     nop                                0.00% (599, 0, 0, 0)
00001480 4e71                     nop                                0.00% (607, 4856, 607, 0)
00001482 4e71                     nop                                0.00% (615, 0, 0, 0)
00001484 4e71                     nop                                0.00% (623, 4984, 623, 0)
00001486 4e71                     nop                                0.00% (631, 0, 0, 0)
00001488 4e71                     nop                                0.00% (639, 5112, 639, 0)
0000148a 4e71                     nop                                0.00% (647, 0, 0, 0)
0000148c 4e71                     nop                                0.00% (655, 5240, 655, 0)
0000148e 4e71                     nop                                0.00% (663, 0, 0, 0)
00001490 4e71                     nop                                0.00% (671, 5368, 671, 0)
00001492 4e71                     nop                                0.00% (679, 0, 0, 0)
00001494 4e71                     nop                                0.00% (687, 5496, 687, 0)
00001496 4e71                     nop                                0.00% (695, 0, 0, 0)
00001498 4e71                     nop                                0.00% (703, 5624, 703, 0)
0000149a 4e71                     nop                                0.00% (711, 0, 0, 0)
0000149c 4e71                     nop                                0.00% (719, 5752, 719, 0)
0000149e 4e71                     nop                                0.00% (727, 0, 0, 0)
000014a0 4e71                     nop                                0.00% (736, 5888, 736, 0)
000014a2 4e71                     nop                                0.00% (744, 0, 0, 0)
000014a4 4e71                     nop                                0.00% (752, 6016, 752, 0)
000014a6 4e71                     nop                                0.00% (760, 0, 0, 0)
000014a8 4e71                     nop                                0.00% (768, 6144, 768, 0)
000014aa 4e71                     nop                                0.00% (776, 0, 0, 0)
000014ac 4e71                     nop                                0.00% (784, 6272, 784, 0)
000014ae 4e71                     nop                                0.00% (792, 0, 0, 0)
000014b0 4e71                     nop                                0.00% (800, 6400, 800, 0)
000014b2 4e71                     nop                                0.00% (808, 0, 0, 0)
000014b4 4e71                     nop                                0.00% (816, 6528, 816, 0)
000014b6 4e71                     nop                                0.00% (824, 0, 0, 0)
000014b8 4e71                     nop                                0.00% (832, 6656, 832, 0)
000014ba 4e71                     nop                                0.00% (840, 0, 0, 0)
000014bc 4e71                     nop                                0.00% (848, 6784, 848, 0)
000014be 4e71                     nop                                0.00% (856, 0, 0, 0)
000014c0 4e71                     nop                                0.00% (864, 6912, 864, 0)
000014c2 4e71                     nop                                0.00% (872, 0, 0, 0)
000014c4 4e71                     nop                                0.00% (880, 7040, 880, 0)
000014c6 4e71                     nop                                0.00% (888, 0, 0, 0)
000014c8 4e71                     nop                                0.00% (896, 7168, 896, 0)
000014ca 4e71                     nop                                0.00% (904, 0, 0, 0)
000014cc 4e71                     nop                                0.00% (912, 7296, 912, 0)
000014ce 4e71                     nop                                0.00% (920, 0, 0, 0)
000014d0 4e71                     nop                                0.00% (928, 7424, 928, 0)
000014d2 4e71                     nop                                0.00% (936, 0, 0, 0)
000014d4 4e71                     nop                                0.00% (944, 7552, 944, 0)
000014d6 4e71                     nop                                0.00% (952, 0, 0, 0)
000014d8 4e71                     nop                                0.00% (960, 7680, 960, 0)
000014da 4e71                     nop                                0.00% (968, 0, 0, 0)
000014dc 4e71                     nop                                0.00% (976, 7808, 976, 0)
000014de 4e71                     nop                                0.00% (984, 0, 0, 0)
000014e0 4e71                     nop                                0.00% (992, 7936, 992, 0)
000014e2 4e71                     nop                                0.00% (1000, 0, 0, 0)
000014e4 4e71                     nop                                0.00% (1008, 8064, 1008, 0)
000014e6 4e71                     nop                                0.00% (1016, 0, 0, 0)
000014e8 4e71                     nop                                0.00% (1024, 8192, 1024, 0)
000014ea 301f                     move.w (a7)+ == $00017ff6 [0000],d0 0.00% (1032, 4512, 0, 0)
000014ec 205f                     movea.l (a7)+ == $00017ff6 [000000e0],a0 0.00% (1032, 8256, 0, 0)
000014ee 4e95                     jsr (a5) == $00000000              0.00% (1032, 28016, 2470, 0)
continue:
000014f0 1038 8209                move.b $ffff8209.w,d0              0.00% (1032, 11412, 1032, 0)
000014f4 1238 8207                move.b $ffff8207.w,d1              0.00% (1032, 12384, 1032, 0)
000014f8 1438 8205                move.b $ffff8205.w,d2              0.00% (1032, 12384, 1032, 0)
000014fc 1638 8209                move.b $ffff8209.w,d3              0.00% (1032, 12384, 1032, 0)
00001500 9600                     sub.b d0,d3                        0.00% (1032, 9228, 1032, 0)
00001502 b63c 0012                cmp.b #$12,d3                      0.00% (1032, 8256, 1032, 0)
00001506 6720                     beq.b #$20 == $00001528 (T)        0.00% (1032, 128, 16, 0)
00001508 5a79 0000 1586           addq.w #$05,$00001586 [0000] nopno 0.00% (1024, 24576, 2048, 0)
0000150e 0279 007f 0000 1586      and.w #$007f,$00001586 [0000] nopno 0.00% (1024, 24576, 2048, 0)
00001516 6700 005a                beq.w #$005a something_wrong_here == $00001572 (T) 0.00% (1024, 8320, 1040, 0)
0000151a 31fc 0765 8240           move.w #$0765,$ffff8240.w          0.00% (1016, 12292, 1016, 0)
00001520 46fc 2300                move.w #$2300,sr                   0.00% (1016, 24384, 3048, 0)
00001524 6000 fe68                bra.w #$fe68 loop == $0000138e (T) 0.00% (1016, 32512, 4064, 0)
00001528 31fc 0770 8240           move.w #$0770,$ffff8240.w          0.00% (8, 176, 16, 0)
0000152e 46fc 2300                move.w #$2300,sr                   0.00% (8, 256, 32, 0)
00001532 c0bc 0000 00ff           and.l #$000000ff,d0                0.00% (8, 64, 8, 0)
00001538 c2bc 0000 00ff           and.l #$000000ff,d1                0.00% (8, 128, 16, 0)
0000153e c4bc 0000 00ff           and.l #$000000ff,d2                0.00% (8, 64, 8, 0)
00001544 e14a                     lsl.w #$08,d2                      0.00% (8, 64, 8, 0)
00001546 d441                     add.w d1,d2                        0.00% (8, 0, 0, 0)
00001548 e18a                     lsl.l #$08,d2                      0.00% (8, 64, 8, 0)
0000154a d440                     add.w d0,d2                        0.00% (8, 0, 0, 0)
0000154c 94b9 0000 044e           sub.l $0000044e [00000000],d2      0.00% (8, 192, 16, 0)
00001552 84fc 00a0                divu.w #$00a0,d2                   0.00% (8, 64, 8, 0)
00001556 2002                     move.l d2,d0                       0.00% (8, 0, 0, 0)
00001558 c0fc 0100                mulu.w #$0100,d0                   0.00% (8, 64, 8, 0)
0000155c 4842                     swap.w d2                          0.00% (8, 64, 8, 0)
0000155e d042                     add.w d2,d0                        0.00% (8, 0, 0, 0)
00001560 907a 0024                sub.w ($0024,pc) == $00001586 [0000] nopno,d0 0.00% (8, 80, 8, 0)
00001564 907a 0020                sub.w ($0020,pc) == $00001586 [0000] nopno,d0 0.00% (8, 112, 8, 0)
00001568 d040                     add.w d0,d0                        0.00% (8, 64, 8, 0)
0000156a 907c 00f8                sub.w #$00f8,d0                    0.00% (8, 64, 8, 0)
0000156e 6000 0018                bra.w #$0018 getouttahere == $00001588 (T) 0.00% (8, 128, 16, 0)
something_wrong_here:
00001572 303c 2710                move.w #$2710,d0                   0.00% (8, 64, 8, 0)
00001576 0678 0123 8240           add.w #$0123,$ffff8240.w           0.23% (80008, 1280128, 80008, 0)
0000157c 51c8 fff8                dbf.w d0,#$fff8 == $00001576 (F)   0.23% (80008, 2560064, 320008, 0)
00001580 7000                     moveq #$00,d0                      0.00% (8, 64, 8, 0)
00001582 6000 0004                bra.w #$0004 getouttahere == $00001588 (T) 0.00% (8, 128, 16, 0)
[...]
getouttahere:
00001588 46fc 2300                move.w #$2300,sr                   0.00% (16, 596, 72, 0)
0000158c 11fc 0002 820a           move.b #$02,$ffff820a.w            0.00% (16, 298, 32, 0)
00001592 31fc 0777 8240           move.w #$0777,$ffff8240.w          0.00% (16, 214, 16, 0)
00001598 41fa 0055                lea.l ($0055,pc) == $000015ef,a0   0.00% (16, 128, 16, 0)
0000159c 7e04                     moveq #$04,d7                      0.00% (16, 128, 16, 0)
0000159e 80fc 000a                divu.w #$000a,d0                   0.00% (80, 640, 80, 0)
000015a2 4840                     swap.w d0                          0.00% (80, 0, 0, 0)
000015a4 d07c 0030                add.w #$0030,d0                    0.00% (80, 640, 80, 0)
000015a8 1100                     move.b d0,-(a0) == $000015f8 [00]  0.00% (80, 948, 80, 0)
000015aa 4240                     clr.w d0                           0.00% (80, 0, 0, 0)
000015ac 4840                     swap.w d0                          0.00% (80, 640, 80, 0)
000015ae 51cf ffee                dbf.w d7,#$ffee == $0000159e (F)   0.00% (80, 1664, 208, 0)
000015b2 23f9 0000 15fe 0000 0010 move.l $000015fe [00e000e2],$00000010 [00e000e2] 0.00% (16, 512, 32, 0)
000015bc 2f39 0000 15fa           move.l $000015fa [00020000],-(a7) == $00017ff2 [1142003e] 0.00% (16, 512, 32, 0)
000015c2 3f3c 0020                move.w #$0020,-(a7) == $00017ff4 [003e] 0.00% (16, 204, 16, 0)
000015c6 4e41                     trap #$01                          0.00% (16, 672, 48, 0)
000015c8 5c8f                     addaq.l #$06,a7                    0.00% (16, 128, 16, 0)
000015ca 4cdf 78f8                movem.l (a7)+ == $00017ff6,d3-d7/a3-a6 0.00% (16, 1152, 0, 0)
000015ce 4e75                     rts  == $000000e0                  0.00% (16, 512, 48, 0)
vblhandler:
000015d0 33fc 0001 0000 1606      move.w #$0001,$00001606 [0001]     0.00% (1032, 12488, 1032, 0)
000015d8 4e73                     rte  == $00e00000                  0.00% (1032, 41280, 3096, 0)
[...]
00e000fa 52b9 0000 0462           addq.l #$01,$00000462 [00000008]   0.00% (8, 128, 0, 0)
00e00100 4e73                     rte  == $00e00000                  0.00% (8, 256, 16, 0)
[...]
00fa002a 0008                     illegal                            0.00% (130, 0, 0, 0)
00fa002c 690a                     bvs.b #$0a == $00fa0038 (F)        0.00% (130, 0, 0, 0)
00fa002e 6602                     bne.b #$02 == $00fa0032 (F)        0.00% (130, 0, 0, 0)
00fa0030 4e73                     rte  == $00e00000                  0.00% (130, 4172, 261, 0)
# <callee>: <caller1> = <calls> <types>[ <inclusive/totals>[ <exclusive/totals>]], <caller2> ..., <callee name>
# types: u = unknown PC change, n = PC moved to next instruction, b = branch/jump, s = subroutine call, r = return from subroutine, e = exception, x = return from exception
# totals: calls/instructions/cycles/i-misses/d-hits
0x111c: 0x1146 = 15 b, 0x1116 = 1 n, main_loop
0x115a: 0x111e = 16 s 16/879/9886/863/0 16/879/9886/863/0, 0x112a = 16 s 16/528/6592/512/0 16/528/6592/512/0, 0x113e = 16 s 16/1056/11484/1040/0 16/1056/11484/1040/0, print
0x116c: 0x1170 = 437 b, 0x1168 = 48 n, strlenloop
0x1188: 0x1272 = 52 b, 0x1184 = 48 n, 0x125e = 44 b, out
0x1192: 0x14ee = 71 s 71/142/1704/142/0 71/142/1704/142/0, test_nop
0x11a0: 0x14ee = 58 s 58/174/1392/116/0 58/174/1392/116/0, test_2nop
0x11ae: 0x14ee = 34 s 34/102/816/68/0 34/102/816/68/0, test_lsl1
0x11bc: 0x14ee = 38 s 38/114/912/76/0 38/114/912/76/0, test_lsl2
0x11d0: 0x14ee = 58 s 58/290/2320/232/0 58/290/2320/232/0, test_exg_dbra1
0x11ea: 0x14ee = 19 s 19/95/608/57/0 19/95/608/57/0, test_exg_dbra2
0x1204: 0x14ee = 110 s 110/440/3920/330/0 110/440/3920/330/0, test_exg_move1
0x121a: 0x14ee = 128 s 128/512/3528/256/0 128/512/3528/256/0, test_exg_move2
0x122e: 0x14ee = 121 s 121/605/4314/363/0 121/605/4314/363/0, test_asr_add1
0x1244: 0x14ee = 8 s 8/40/288/24/0 8/40/288/24/0, test_asr_add2
0x125a: 0x14ee = 44 s 44/176/2112/220/0 44/176/2112/220/0, test_cmp_beq1
0x126e: 0x14ee = 52 s 52/208/2496/260/0 52/208/2496/260/0, test_cmp_beq2
0x1284: 0x14ee = 34 s 34/136/1480/102/0 34/136/1480/102/0, test_sub_move1
0x129c: 0x14ee = 121 s 121/484/5274/363/0 121/484/5274/363/0, test_sub_move2
0x12b2: 0x14ee = 8 s 8/16/224/16/0 8/16/224/16/0, test_move_820a
0x12c4: 0x14ee = 128 s 128/256/4048/256/0 128/256/4048/256/0, test_move_8800
0x1352: 0x13c4 = 1032 s 1032/2064/33024/3096/0 1032/2064/33024/3096/0, testinit
0x135a: 0x1132 = 16 s 3112/35474106/169202440/4034700/0 16/35466188/169080212/4024595/0, run_test
0x138e: 0x1524 = 1016 b, 0x1388 = 16 n, loop
0x14f0: 0x14ee = 1032 n, continue
0x1572: 0x1516 = 8 b, something_wrong_here
0x1588: 0x156e = 8 b, 0x1582 = 8 b, getouttahere
0x15d0: 0x13aa = 1032 e 1032/2064/53768/4128/0 1032/2064/53768/4128/0, vblhandler
