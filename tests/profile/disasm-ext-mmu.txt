Hatari CPU profile (Hatari v2.6.1)
Cycles/second:	8021247
Field names:	Executed instructions, Used cycles, Instruction cache misses, Data cache hits
Field regexp:	^\$?([0-9A-Fa-f]+) .*% \(([^)]*)\)$
ST_RAM:		0x000000-0x100000
ROM_TOS:	0xe00000-0xe00124
CARTRIDGE:	0xfa0000-0xfc0000
# disassembly with profile data: <instructions percentage>% (<sum of instructions>, <sum of cycles>, <sum of i-cache misses>, <sum of d-cache hits>)
$00001100             clr.w     -(a7)                      0.00% (1, 10, 1, 0)
$00001102             pea.l     $15da.l                    0.00% (1, 16, 1, 0)
$00001108             move.w    #$3c,-(a7)                 0.00% (1, 14, 1, 0)
$0000110c             trap      #$1                        0.00% (1, 42, 3, 0)
$0000110e             addq.l    #$8,a7                     0.00% (1, 0, 0, 0)
$00001110             move.w    d0,$1608.l                 0.00% (1, 18, 2, 0)
$00001116             lea.l     $12ca.l,a4                 0.00% (1, 8, 1, 0)
main_loop:
$0000111c             move.l    (a4)+,-(a7)                0.00% (16, 256, 0, 0)
$0000111e             bsr.w     $115a                      0.00% (16, 512, 48, 0)
$00001122             addq.l    #$4,a7                     0.00% (16, 0, 0, 0)
$00001124             pea.l     $15e6.l                    0.00% (16, 256, 16, 0)
$0000112a             bsr.w     $115a                      0.00% (16, 512, 48, 0)
$0000112e             addq.l    #$4,a7                     0.00% (16, 0, 0, 0)
$00001130             move.l    (a4)+,-(a7)                0.00% (16, 256, 0, 0)
$00001132             bsr.w     $135a                      0.00% (16, 512, 48, 0)
$00001136             addq.l    #$4,a7                     0.00% (16, 0, 0, 0)
$00001138             pea.l     $15ea.l                    0.00% (16, 256, 16, 0)
$0000113e             bsr.w     $115a                      0.00% (16, 512, 48, 0)
$00001142             addq.l    #$4,a7                     0.00% (16, 0, 0, 0)
$00001144             tst.l     (a4)                       0.00% (16, 256, 16, 0)
$00001146             bne.b     $111c                      0.00% (16, 240, 30, 0)
$00001148             move.w    $1608.l,-(a7)              0.00% (1, 24, 2, 0)
$0000114e             move.w    #$3e,-(a7)                 0.00% (1, 10, 1, 0)
$00001152             trap      #$1                        0.00% (1, 42, 3, 0)
$00001154             addq.l    #$4,a7                     0.00% (1, 8, 1, 0)
$00001156             clr.w     -(a7)                      0.00% (1, 6, 0, 0)
[...]
print:
$0000115a             move.l    $4(a7),-(a7)               0.00% (48, 1152, 48, 0)
$0000115e             move.w    #$9,-(a7)                  0.00% (48, 584, 48, 0)
$00001162             trap      #$1                        0.00% (48, 2016, 144, 0)
$00001164             addq.l    #$6,a7                     0.00% (48, 384, 48, 0)
$00001166             moveq     #$ff,d0                    0.00% (48, 0, 0, 0)
$00001168             movea.l   $4(a7),a0                  0.00% (48, 768, 48, 0)
strlenloop:
$0000116c             addq.l    #$1,d0                     0.00% (485, 3880, 485, 0)
$0000116e             tst.b     (a0)+                      0.00% (485, 1946, 0, 0)
$00001170             bne.b     $116c                      0.00% (485, 7376, 922, 0)
$00001172             move.l    $4(a7),-(a7)               0.00% (48, 1152, 48, 0)
$00001176             move.l    d0,-(a7)                   0.00% (48, 384, 0, 0)
$00001178             move.w    $1608.l,-(a7)              0.00% (48, 1152, 96, 0)
$0000117e             move.w    #$40,-(a7)                 0.00% (48, 556, 48, 0)
$00001182             trap      #$1                        0.00% (48, 2016, 144, 0)
$00001184             lea.l     $c(a7),a7                  0.00% (48, 0, 0, 0)
out:
$00001188             rts                                  0.00% (144, 3840, 336, 0)
[...]
test_nop:
$00001192             nop                                  0.00% (71, 0, 0, 0)
$00001194             rts                                  0.00% (71, 1704, 142, 0)
[...]
test_2nop:
$000011a0             nop                                  0.00% (58, 0, 0, 0)
$000011a2             nop                                  0.00% (58, 0, 0, 0)
$000011a4             rts                                  0.00% (58, 1392, 116, 0)
[...]
test_lsl1:
$000011ae             moveq     #$0,d0                     0.00% (34, 0, 0, 0)
$000011b0             lsl.l     d0,d1                      0.00% (34, 0, 0, 0)
$000011b2             rts                                  0.00% (34, 816, 68, 0)
[...]
test_lsl2:
$000011bc             moveq     #$6,d0                     0.00% (38, 0, 0, 0)
$000011be             lsl.l     d0,d1                      0.00% (38, 0, 0, 0)
$000011c0             rts                                  0.00% (38, 912, 76, 0)
[...]
test_exg_dbra1:
$000011d0             moveq     #$0,d2                     0.00% (58, 464, 58, 0)
$000011d2             nop                                  0.00% (58, 0, 0, 0)
$000011d4             exg.l     d0,d1                      0.00% (58, 464, 58, 0)
$000011d6             dbra      d2,$1188                   0.00% (58, 0, 0, 0)
$000011da             rts                                  0.00% (58, 1392, 116, 0)
[...]
test_exg_dbra2:
$000011ea             moveq     #$0,d2                     0.00% (19, 0, 0, 0)
$000011ec             exg.l     d0,d1                      0.00% (19, 152, 19, 0)
$000011ee             nop                                  0.00% (19, 0, 0, 0)
$000011f0             dbra      d2,$1188                   0.00% (19, 0, 0, 0)
$000011f4             rts                                  0.00% (19, 456, 38, 0)
[...]
test_exg_move1:
$00001204             nop                                  0.00% (110, 880, 110, 0)
$00001206             exg.l     d0,d1                      0.00% (110, 0, 0, 0)
$00001208             move.b    -(a0),d1                   0.00% (110, 400, 0, 0)
$0000120a             rts                                  0.00% (110, 2640, 220, 0)
[...]
test_exg_move2:
$0000121a             exg.l     d0,d1                      0.00% (128, 0, 0, 0)
$0000121c             nop                                  0.00% (128, 0, 0, 0)
$0000121e             move.b    -(a0),d1                   0.00% (128, 456, 0, 0)
$00001220             rts                                  0.00% (128, 3072, 256, 0)
[...]
test_asr_add1:
$0000122e             moveq     #$2,d0                     0.00% (121, 0, 0, 0)
$00001230             nop                                  0.00% (121, 968, 121, 0)
$00001232             asr.w     d0,d1                      0.00% (121, 0, 0, 0)
$00001234             add.w     -(a0),d1                   0.00% (121, 442, 0, 0)
$00001236             rts                                  0.00% (121, 2904, 242, 0)
[...]
test_asr_add2:
$00001244             moveq     #$2,d0                     0.00% (8, 64, 8, 0)
$00001246             asr.w     d0,d1                      0.00% (8, 0, 0, 0)
$00001248             nop                                  0.00% (8, 0, 0, 0)
$0000124a             add.w     -(a0),d1                   0.00% (8, 32, 0, 0)
$0000124c             rts                                  0.00% (8, 192, 16, 0)
[...]
test_cmp_beq1:
$0000125a             nop                                  0.00% (44, 0, 0, 0)
$0000125c             cmp.l     d0,d0                      0.00% (44, 352, 44, 0)
$0000125e             bra.w     $1188                      0.00% (44, 704, 88, 0)
[...]
test_cmp_beq2:
$0000126e             cmp.l     d0,d0                      0.00% (52, 0, 0, 0)
$00001270             nop                                  0.00% (52, 416, 52, 0)
$00001272             bra.w     $1188                      0.00% (52, 832, 104, 0)
[...]
test_sub_move1:
$00001284             clr.w     d2                         0.00% (34, 272, 34, 0)
$00001286             sub.l     (a0),d0                    0.00% (34, 272, 0, 0)
$00001288             move.w    (a0,d2.w),d1               0.00% (34, 120, 0, 0)
$0000128c             rts                                  0.00% (34, 816, 68, 0)
[...]
test_sub_move2:
$0000129c             sub.l     (a0),d0                    0.00% (121, 1936, 121, 0)
$0000129e             clr.w     d2                         0.00% (121, 0, 0, 0)
$000012a0             move.w    (a0,d2.w),d1               0.00% (121, 434, 0, 0)
$000012a4             rts                                  0.00% (121, 2904, 242, 0)
[...]
test_move_820a:
$000012b2             move.b    $820a.w,d0                 0.00% (8, 24, 0, 0)
$000012b6             rts                                  0.00% (8, 200, 16, 0)
[...]
test_move_8800:
$000012c4             move.b    $8800.w,d0                 0.00% (128, 872, 0, 0)
$000012c8             rts                                  0.00% (128, 3176, 256, 0)
[...]
testinit:
$00001352             movea.l   #$164a,a0                  0.00% (1032, 0, 0, 0)
$00001358             rts                                  0.00% (1032, 33024, 3096, 0)
run_test:
$0000135a             move.l    $4(a7),d0                  0.00% (16, 256, 16, 0)
$0000135e             movem.l   d3-d7/a3-a6,-(a7)          0.00% (16, 1280, 16, 0)
$00001362             movea.l   d0,a5                      0.00% (16, 0, 0, 0)
$00001364             pea.l     $0.l                       0.00% (16, 384, 32, 0)
$0000136a             move.w    #$20,-(a7)                 0.00% (16, 196, 16, 0)
$0000136e             trap      #$1                        0.00% (16, 672, 48, 0)
$00001370             addq.l    #$6,a7                     0.00% (16, 128, 16, 0)
$00001372             move.l    d0,$15fa.l                 0.00% (16, 256, 16, 0)
$00001378             move.l    $10.l,$15fe.l              0.00% (16, 640, 48, 0)
$00001382             move.w    #$765,$8240.w              0.00% (16, 188, 16, 0)
$00001388             move.b    #$2,$820a.w                0.00% (16, 306, 32, 0)
loop:
$0000138e             move.l    $70.l,$1602.l              0.00% (1032, 33042, 2064, 0)
$00001398             move.l    #$15d0,$70.l               0.00% (1032, 33024, 3096, 0)
$000013a2             move.w    #$0,$1606.l                0.00% (1032, 20536, 2064, 0)
$000013aa             stop      #$2300                    92.57% (32842328, 131398244, 2064, 0)
$000013ae             tst.w     $1606.l                    0.00% (1032, 12280, 1032, 0)
$000013b4             beq.b     $138e                      0.00% (1032, 8256, 1032, 0)
$000013b6             move.l    $1602.l,$70.l              0.00% (1032, 33024, 2064, 0)
$000013c0             move.w    #$2700,sr                  0.00% (1032, 24768, 3096, 0)
$000013c4             jsr       $1352.l                    0.00% (1032, 33024, 3096, 0)
$000013ca             move.l    a0,-(a7)                   0.00% (1032, 8256, 0, 0)
$000013cc             move.w    d0,-(a7)                   0.00% (1032, 12488, 1032, 0)
$000013ce             lea.l     $8209.w,a0                 0.00% (1032, 8256, 1032, 0)
$000013d2             moveq     #$0,d0                     0.00% (1032, 0, 0, 0)
$000013d4             move.b    (a0),d0                    3.33% (1180942, 14171444, 1180942, 0)
$000013d6             beq.b     $13d4                      3.33% (1180942, 18878560, 2359820, 0)
$000013d8             not.w     d0                         0.00% (1032, 8256, 1032, 0)
$000013da             lsr.w     d0,d0                      0.00% (1032, 0, 0, 0)
$000013dc             move.w    #$80,d0                    0.00% (1032, 8256, 1032, 0)
$000013e0             sub.w     $1586(pc),d0               0.00% (1032, 12000, 1032, 0)
$000013e4             add.w     d0,d0                      0.00% (1032, 0, 0, 0)
$000013e6             jmp       $13ea(pc,d0.w)             0.00% (1032, 20656, 2582, 0)
[...]
$000013ec             nop                                  0.00% (8, 64, 8, 0)
$000013ee             nop                                  0.00% (16, 0, 0, 0)
$000013f0             nop                                  0.00% (24, 192, 24, 0)
$000013f2             nop                                  0.00% (32, 0, 0, 0)
$000013f4             nop                                  0.00% (40, 320, 40, 0)
$000013f6             nop                                  0.00% (48, 0, 0, 0)
$000013f8             nop                                  0.00% (56, 448, 56, 0)
$000013fa             nop                                  0.00% (64, 0, 0, 0)
$000013fc             nop                                  0.00% (72, 576, 72, 0)
$000013fe             nop                                  0.00% (80, 0, 0, 0)
$00001400             nop                                  0.00% (88, 704, 88, 0)
$00001402             nop                                  0.00% (96, 0, 0, 0)
$00001404             nop                                  0.00% (104, 832, 104, 0)
$00001406             nop                                  0.00% (112, 0, 0, 0)
$00001408             nop                                  0.00% (120, 960, 120, 0)
$0000140a             nop                                  0.00% (128, 0, 0, 0)
$0000140c             nop                                  0.00% (136, 1088, 136, 0)
$0000140e             nop                                  0.00% (144, 0, 0, 0)
$00001410             nop                                  0.00% (152, 1216, 152, 0)
$00001412             nop                                  0.00% (160, 0, 0, 0)
$00001414             nop                                  0.00% (168, 1344, 168, 0)
$00001416             nop                                  0.00% (176, 0, 0, 0)
$00001418             nop                                  0.00% (184, 1472, 184, 0)
$0000141a             nop                                  0.00% (192, 0, 0, 0)
$0000141c             nop                                  0.00% (200, 1600, 200, 0)
$0000141e             nop                                  0.00% (208, 0, 0, 0)
$00001420             nop                                  0.00% (216, 1728, 216, 0)
$00001422             nop                                  0.00% (224, 0, 0, 0)
$00001424             nop                                  0.00% (232, 1856, 232, 0)
$00001426             nop                                  0.00% (240, 0, 0, 0)
$00001428             nop                                  0.00% (248, 1984, 248, 0)
$0000142a             nop                                  0.00% (256, 0, 0, 0)
$0000142c             nop                                  0.00% (264, 2112, 264, 0)
$0000142e             nop                                  0.00% (274, 0, 0, 0)
$00001430             nop                                  0.00% (282, 2256, 282, 0)
$00001432             nop                                  0.00% (290, 0, 0, 0)
$00001434             nop                                  0.00% (298, 2384, 298, 0)
$00001436             nop                                  0.00% (307, 0, 0, 0)
$00001438             nop                                  0.00% (315, 2520, 315, 0)
$0000143a             nop                                  0.00% (325, 0, 0, 0)
$0000143c             nop                                  0.00% (334, 2672, 334, 0)
$0000143e             nop                                  0.00% (343, 0, 0, 0)
$00001440             nop                                  0.00% (351, 2808, 351, 0)
$00001442             nop                                  0.00% (359, 0, 0, 0)
$00001444             nop                                  0.00% (367, 2936, 367, 0)
$00001446             nop                                  0.00% (375, 0, 0, 0)
$00001448             nop                                  0.00% (383, 3064, 383, 0)
$0000144a             nop                                  0.00% (391, 0, 0, 0)
$0000144c             nop                                  0.00% (399, 3192, 399, 0)
$0000144e             nop                                  0.00% (407, 0, 0, 0)
$00001450             nop                                  0.00% (415, 3320, 415, 0)
$00001452             nop                                  0.00% (423, 0, 0, 0)
$00001454             nop                                  0.00% (431, 3448, 431, 0)
$00001456             nop                                  0.00% (439, 0, 0, 0)
$00001458             nop                                  0.00% (447, 3576, 447, 0)
$0000145a             nop                                  0.00% (455, 0, 0, 0)
$0000145c             nop                                  0.00% (463, 3704, 463, 0)
$0000145e             nop                                  0.00% (471, 0, 0, 0)
$00001460             nop                                  0.00% (479, 3832, 479, 0)
$00001462             nop                                  0.00% (487, 0, 0, 0)
$00001464             nop                                  0.00% (495, 3960, 495, 0)
$00001466             nop                                  0.00% (503, 0, 0, 0)
$00001468             nop                                  0.00% (511, 4088, 511, 0)
$0000146a             nop                                  0.00% (519, 0, 0, 0)
$0000146c             nop                                  0.00% (527, 4216, 527, 0)
$0000146e             nop                                  0.00% (535, 0, 0, 0)
$00001470             nop                                  0.00% (543, 4344, 543, 0)
$00001472             nop                                  0.00% (551, 0, 0, 0)
$00001474             nop                                  0.00% (559, 4472, 559, 0)
$00001476             nop                                  0.00% (567, 0, 0, 0)
$00001478             nop                                  0.00% (575, 4600, 575, 0)
$0000147a             nop                                  0.00% (583, 0, 0, 0)
$0000147c             nop                                  0.00% (591, 4728, 591, 0)
$0000147e             nop                                  0.00% (599, 0, 0, 0)
$00001480             nop                                  0.00% (607, 4856, 607, 0)
$00001482             nop                                  0.00% (615, 0, 0, 0)
$00001484             nop                                  0.00% (623, 4984, 623, 0)
$00001486             nop                                  0.00% (631, 0, 0, 0)
$00001488             nop                                  0.00% (639, 5112, 639, 0)
$0000148a             nop                                  0.00% (647, 0, 0, 0)
$0000148c             nop                                  0.00% (655, 5240, 655, 0)
$0000148e             nop                                  0.00% (663, 0, 0, 0)
$00001490             nop                                  0.00% (671, 5368, 671, 0)
$00001492             nop                                  0.00% (679, 0, 0, 0)
$00001494             nop                                  0.00% (687, 5496, 687, 0)
$00001496             nop                                  0.00% (695, 0, 0, 0)
$00001498             nop                                  0.00% (703, 5624, 703, 0)
$0000149a             nop                                  0.00% (711, 0, 0, 0)
$0000149c             nop                                  0.00% (719, 5752, 719, 0)
$0000149e             nop                                  0.00% (727, 0, 0, 0)
$000014a0             nop                                  0.00% (736, 5888, 736, 0)
$000014a2             nop                                  0.00% (744, 0, 0, 0)
$000014a4             nop                                  0.00% (752, 6016, 752, 0)
$000014a6             nop                                  0.00% (760, 0, 0, 0)
$000014a8             nop                                  0.00% (768, 6144, 768, 0)
$000014aa             nop                                  0.00% (776, 0, 0, 0)
$000014ac             nop                                  0.00% (784, 6272, 784, 0)
$000014ae             nop                                  0.00% (792, 0, 0, 0)
$000014b0             nop                                  0.00% (800, 6400, 800, 0)
$000014b2             nop                                  0.00% (808, 0, 0, 0)
$000014b4             nop                                  0.00% (816, 6528, 816, 0)
$000014b6             nop                                  0.00% (824, 0, 0, 0)
$000014b8             nop                                  0.00% (832, 6656, 832, 0)
$000014ba             nop                                  0.00% (840, 0, 0, 0)
$000014bc             nop                                  0.00% (848, 6784, 848, 0)
$000014be             nop                                  0.00% (856, 0, 0, 0)
$000014c0             nop                                  0.00% (864, 6912, 864, 0)
$000014c2             nop                                  0.00% (872, 0, 0, 0)
$000014c4             nop                                  0.00% (880, 7040, 880, 0)
$000014c6             nop                                  0.00% (888, 0, 0, 0)
$000014c8             nop                                  0.00% (896, 7168, 896, 0)
$000014ca             nop                                  0.00% (904, 0, 0, 0)
$000014cc             nop                                  0.00% (912, 7296, 912, 0)
$000014ce             nop                                  0.00% (920, 0, 0, 0)
$000014d0             nop                                  0.00% (928, 7424, 928, 0)
$000014d2             nop                                  0.00% (936, 0, 0, 0)
$000014d4             nop                                  0.00% (944, 7552, 944, 0)
$000014d6             nop                                  0.00% (952, 0, 0, 0)
$000014d8             nop                                  0.00% (960, 7680, 960, 0)
$000014da             nop                                  0.00% (968, 0, 0, 0)
$000014dc             nop                                  0.00% (976, 7808, 976, 0)
$000014de             nop                                  0.00% (984, 0, 0, 0)
$000014e0             nop                                  0.00% (992, 7936, 992, 0)
$000014e2             nop                                  0.00% (1000, 0, 0, 0)
$000014e4             nop                                  0.00% (1008, 8064, 1008, 0)
$000014e6             nop                                  0.00% (1016, 0, 0, 0)
$000014e8             nop                                  0.00% (1024, 8192, 1024, 0)
$000014ea             move.w    (a7)+,d0                   0.00% (1032, 4512, 0, 0)
$000014ec             movea.l   (a7)+,a0                   0.00% (1032, 8256, 0, 0)
$000014ee             jsr       (a5)                       0.00% (1032, 28016, 2470, 0)
continue:
$000014f0             move.b    $8209.w,d0                 0.00% (1032, 11412, 1032, 0)
$000014f4             move.b    $8207.w,d1                 0.00% (1032, 12384, 1032, 0)
$000014f8             move.b    $8205.w,d2                 0.00% (1032, 12384, 1032, 0)
$000014fc             move.b    $8209.w,d3                 0.00% (1032, 12384, 1032, 0)
$00001500             sub.b     d0,d3                      0.00% (1032, 9228, 1032, 0)
$00001502             cmp.b     #$12,d3                    0.00% (1032, 8256, 1032, 0)
$00001506             beq.b     $1528                      0.00% (1032, 128, 16, 0)
$00001508             addq.w    #$5,$1586.l                0.00% (1024, 24576, 2048, 0)
$0000150e             andi.w    #$7f,$1586.l               0.00% (1024, 24576, 2048, 0)
$00001516             beq.w     $1572                      0.00% (1024, 8320, 1040, 0)
$0000151a             move.w    #$765,$8240.w              0.00% (1016, 12292, 1016, 0)
$00001520             move.w    #$2300,sr                  0.00% (1016, 24384, 3048, 0)
$00001524             bra.w     $138e                      0.00% (1016, 32512, 4064, 0)
$00001528             move.w    #$770,$8240.w              0.00% (8, 176, 16, 0)
$0000152e             move.w    #$2300,sr                  0.00% (8, 256, 32, 0)
$00001532             and.l     #$ff,d0                    0.00% (8, 64, 8, 0)
$00001538             and.l     #$ff,d1                    0.00% (8, 128, 16, 0)
$0000153e             and.l     #$ff,d2                    0.00% (8, 64, 8, 0)
$00001544             lsl.w     #$8,d2                     0.00% (8, 64, 8, 0)
$00001546             add.w     d1,d2                      0.00% (8, 0, 0, 0)
$00001548             lsl.l     #$8,d2                     0.00% (8, 64, 8, 0)
$0000154a             add.w     d0,d2                      0.00% (8, 0, 0, 0)
$0000154c             sub.l     $44e.l,d2                  0.00% (8, 192, 16, 0)
$00001552             divu.w    #$a0,d2                    0.00% (8, 64, 8, 0)
$00001556             move.l    d2,d0                      0.00% (8, 0, 0, 0)
$00001558             mulu.w    #$100,d0                   0.00% (8, 64, 8, 0)
$0000155c             swap      d2                         0.00% (8, 64, 8, 0)
$0000155e             add.w     d2,d0                      0.00% (8, 0, 0, 0)
$00001560             sub.w     $1586(pc),d0               0.00% (8, 80, 8, 0)
$00001564             sub.w     $1586(pc),d0               0.00% (8, 112, 8, 0)
$00001568             add.w     d0,d0                      0.00% (8, 64, 8, 0)
$0000156a             sub.w     #$f8,d0                    0.00% (8, 64, 8, 0)
$0000156e             bra.w     $1588                      0.00% (8, 128, 16, 0)
something_wrong_here:
$00001572             move.w    #$2710,d0                  0.00% (8, 64, 8, 0)
$00001576             addi.w    #$123,$8240.w              0.23% (80008, 1280128, 80008, 0)
$0000157c             dbra      d0,$1576                   0.23% (80008, 2560064, 320008, 0)
$00001580             moveq     #$0,d0                     0.00% (8, 64, 8, 0)
$00001582             bra.w     $1588                      0.00% (8, 128, 16, 0)
[...]
getouttahere:
$00001588             move.w    #$2300,sr                  0.00% (16, 596, 72, 0)
$0000158c             move.b    #$2,$820a.w                0.00% (16, 298, 32, 0)
$00001592             move.w    #$777,$8240.w              0.00% (16, 214, 16, 0)
$00001598             lea.l     $15ef(pc),a0               0.00% (16, 128, 16, 0)
$0000159c             moveq     #$4,d7                     0.00% (16, 128, 16, 0)
$0000159e             divu.w    #$a,d0                     0.00% (80, 640, 80, 0)
$000015a2             swap      d0                         0.00% (80, 0, 0, 0)
$000015a4             add.w     #$30,d0                    0.00% (80, 640, 80, 0)
$000015a8             move.b    d0,-(a0)                   0.00% (80, 948, 80, 0)
$000015aa             clr.w     d0                         0.00% (80, 0, 0, 0)
$000015ac             swap      d0                         0.00% (80, 640, 80, 0)
$000015ae             dbra      d7,$159e                   0.00% (80, 1664, 208, 0)
$000015b2             move.l    $15fe.l,$10.l              0.00% (16, 512, 32, 0)
$000015bc             move.l    $15fa.l,-(a7)              0.00% (16, 512, 32, 0)
$000015c2             move.w    #$20,-(a7)                 0.00% (16, 204, 16, 0)
$000015c6             trap      #$1                        0.00% (16, 672, 48, 0)
$000015c8             addq.l    #$6,a7                     0.00% (16, 128, 16, 0)
$000015ca             movem.l   (a7)+,d3-d7/a3-a6          0.00% (16, 1152, 0, 0)
$000015ce             rts                                  0.00% (16, 512, 48, 0)
vblhandler:
$000015d0             move.w    #$1,$1606.l                0.00% (1032, 12488, 1032, 0)
$000015d8             rte                                  0.00% (1032, 41280, 3096, 0)
[...]
$00e000fa             addq.l    #$1,$462.l                 0.00% (8, 128, 0, 0)
$00e00100             rte                                  0.00% (8, 256, 16, 0)
[...]
$00fa002a             dc.w      $0008                      0.00% (130, 0, 0, 0)
$00fa002c             bvs.b     $fa0038                    0.00% (130, 0, 0, 0)
$00fa002e             bne.b     $fa0032                    0.00% (130, 0, 0, 0)
$00fa0030             rte                                  0.00% (130, 4172, 261, 0)
# <callee>: <caller1> = <calls> <types>[ <inclusive/totals>[ <exclusive/totals>]], <caller2> ..., <callee name>
# types: u = unknown PC change, n = PC moved to next instruction, b = branch/jump, s = subroutine call, r = return from subroutine, e = exception, x = return from exception
# totals: calls/instructions/cycles/i-misses/d-hits
0x111c: 0x1146 = 15 b, 0x1116 = 1 n, main_loop
0x115a: 0x111e = 16 s 16/879/9886/863/0 16/879/9886/863/0, 0x112a = 16 s 16/528/6592/512/0 16/528/6592/512/0, 0x113e = 16 s 16/1056/11484/1040/0 16/1056/11484/1040/0, print
0x116c: 0x1170 = 437 b, 0x1168 = 48 n, strlenloop
0x1188: 0x1272 = 52 b, 0x1184 = 48 n, 0x125e = 44 b, out
0x1192: 0x14ee = 71 s 71/142/1704/142/0 71/142/1704/142/0, test_nop
0x11a0: 0x14ee = 58 s 58/174/1392/116/0 58/174/1392/116/0, test_2nop
0x11ae: 0x14ee = 34 s 34/102/816/68/0 34/102/816/68/0, test_lsl1
0x11bc: 0x14ee = 38 s 38/114/912/76/0 38/114/912/76/0, test_lsl2
0x11d0: 0x14ee = 58 s 58/290/2320/232/0 58/290/2320/232/0, test_exg_dbra1
0x11ea: 0x14ee = 19 s 19/95/608/57/0 19/95/608/57/0, test_exg_dbra2
0x1204: 0x14ee = 110 s 110/440/3920/330/0 110/440/3920/330/0, test_exg_move1
0x121a: 0x14ee = 128 s 128/512/3528/256/0 128/512/3528/256/0, test_exg_move2
0x122e: 0x14ee = 121 s 121/605/4314/363/0 121/605/4314/363/0, test_asr_add1
0x1244: 0x14ee = 8 s 8/40/288/24/0 8/40/288/24/0, test_asr_add2
0x125a: 0x14ee = 44 s 44/176/2112/220/0 44/176/2112/220/0, test_cmp_beq1
0x126e: 0x14ee = 52 s 52/208/2496/260/0 52/208/2496/260/0, test_cmp_beq2
0x1284: 0x14ee = 34 s 34/136/1480/102/0 34/136/1480/102/0, test_sub_move1
0x129c: 0x14ee = 121 s 121/484/5274/363/0 121/484/5274/363/0, test_sub_move2
0x12b2: 0x14ee = 8 s 8/16/224/16/0 8/16/224/16/0, test_move_820a
0x12c4: 0x14ee = 128 s 128/256/4048/256/0 128/256/4048/256/0, test_move_8800
0x1352: 0x13c4 = 1032 s 1032/2064/33024/3096/0 1032/2064/33024/3096/0, testinit
0x135a: 0x1132 = 16 s 3112/35474106/169202440/4034700/0 16/35466188/169080212/4024595/0, run_test
0x138e: 0x1524 = 1016 b, 0x1388 = 16 n, loop
0x14f0: 0x14ee = 1032 n, continue
0x1572: 0x1516 = 8 b, something_wrong_here
0x1588: 0x156e = 8 b, 0x1582 = 8 b, getouttahere
0x15d0: 0x13aa = 1032 e 1032/2064/53768/4128/0 1032/2064/53768/4128/0, vblhandler
