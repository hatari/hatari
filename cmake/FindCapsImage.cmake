INCLUDE(CheckLibraryExists)
INCLUDE(FindPackageHandleStandardArgs)
INCLUDE(GNUInstallDirs)
INCLUDE(FindPkgConfig)

SET(CapsImage_FOUND FALSE)

SET(CAPSIMAGE_INCLUDE_HINTS ${CMAKE_INSTALL_INCLUDEDIR})
SET(CAPSIMAGE_LIB_HINTS ${CMAKE_INSTALL_LIBDIR})
SET(CAPSIMAGE_VERSION_HINTS 5.1)

option(ADD_INCLUDE_SUFFIX "Add major version suffix to include directory" ON)
if (ADD_INCLUDE_SUFFIX)
	string(REGEX REPLACE "^([0-9]+).([0-9]+)$" "\\1" CapsImage_INCLUDE_PATH_SUFFIX "${CAPSIMAGE_VERSION_HINTS}")
endif()

find_package(PkgConfig)
IF(PKG_CONFIG_FOUND)
	PKG_SEARCH_MODULE(CapsImage libcapsimage QUIET)
	IF(CAPSIMAGE_INCLUDE_DIRS)
		SET(CAPSIMAGE_INCLUDE_HINTS ${CAPSIMAGE_INCLUDE_DIRS})
	ENDIF()
	IF(CAPSIMAGE_LIBRARY_DIRS)
		SET(CAPSIMAGE_LIBRARY_HINTS ${CAPSIMAGE_LIBRARY_DIRS})
	ENDIF()
	IF(CAPSIMAGE_VERSION)
		SET(CAPSIMAGE_VERSION_HINTS ${CAPSIMAGE_VERSION})
		if (ADD_INCLUDE_SUFFIX)
			string(REGEX REPLACE "^([0-9]+).([0-9]+)$" "\\1" CapsImage_INCLUDE_PATH_SUFFIX "${CAPSIMAGE_VERSION_HINTS}")
		endif()
	ENDIF()
ENDIF()

FIND_FILE(CAPSIMAGE_VERSION_HEADER NAMES CapsLibVersion.h HINTS ${CAPSIMAGE_INCLUDE_HINTS} PATH_SUFFIXES caps${CapsImage_INCLUDE_PATH_SUFFIX} caps)
IF(CAPSIMAGE_VERSION_HEADER_FOUND)
	file(STRINGS "${CAPSIMAGE_VERSION_HEADER}" CAPSIMAGE_VERSION_RELEASE_LINE REGEX "^#define[ \t]+CAPS_LIB_RELEASE[ \t]+[0-9]+$")
	file(STRINGS "${CAPSIMAGE_VERSION_HEADER}" CAPSIMAGE_VERSION_REVISION_LINE REGEX "^#define[ \t]+CAPS_LIB_REVISION[ \t]+[0-9]+$")
	string(REGEX REPLACE "^#define[ \t]+CAPS_LIB_RELEASE[ \t]+([0-9]+)$" "\\1" CAPSIMAGE_VERSION_RELEASE "${CAPSIMAGE_VERSION_REALEASE_LINE}")
	string(REGEX REPLACE "^#define[ \t]+CAPS_LIB_REVISION[ \t]+([0-9]+)$" "\\1" CAPSIMAGE_VERSION_REVISION "${CAPSIMAGE_VERSION_REVISION_LINE}")
	unset(CAPSIMAGE_VERSION_RELEASE_LINE)
	unset(CAPSIMAGE_VERSION_REVISION_LINE)
	SET(CAPSIMAGE_VERSION ${CAPSIMAGE_VERSION_RELEASE}.${CAPSIMAGE_VERSION_REVISION})
	SET(CAPSIMAGE_VERSION_STRING "${CAPSIMAGE_VERSION}")
	IF(ADD_INCLUDE_SUFFIX)
		SET(CapsImage_INCLUDE_PATH_SUFFIX "${CAPSIMAGE_VERSION_RELEASE}")
	ENDIF()
ELSEIF(CAPSIMAGE_VERSION_HINTS)
	string(REGEX REPLACE "^([0-9]+).([0-9]+)$" "\\1" CAPSIMAGE_VERSION_RELEASE "${CAPSIMAGE_VERSION_HINTS}")
	string(REGEX REPLACE "^([0-9]+).([0-9]+)$" "\\2" CAPSIMAGE_VERSION_REVISION "${CAPSIMAGE_VERSION_HINTS}")
	SET(CAPSIMAGE_VERSION ${CAPSIMAGE_VERSION_RELEASE}.${CAPSIMAGE_VERSION_REVISION})
	SET(CAPSIMAGE_VERSION_STRING "${CAPSIMAGE_VERSION}")
	IF(ADD_INCLUDE_SUFFIX)
		SET(CapsImage_INCLUDE_PATH_SUFFIX "${CAPSIMAGE_VERSION_RELEASE}")
	ENDIF()
ENDIF()
if(ADD_INCLUDE_SUFFIX)
	message(STATUS "Using '${CapsImage_INCLUDE_PATH_SUFFIX}' suffix on include directory")
endif()

FIND_PATH(CAPSIMAGE_INCLUDE_DIR NAMES CapsLibAll.h HINTS ${CAPSIMAGE_INCLUDE_HINTS} PATH_SUFFIXES caps${CapsImage_INCLUDE_PATH_SUFFIX} caps)
FIND_LIBRARY(CAPSIMAGE_LIBRARY NAMES capsimage HINTS ${CAPSIMAGE_LIBRARY_HINTS} PATH_SUFFIXES lib capsimg capsimage)

MARK_AS_ADVANCED(CAPSIMAGE_LIBRARY CAPSIMAGE_INCLUDE_DIR CAPSIMAGE_VERSION CAPSIMAGE_VERSION_RELEASE CAPSIMAGE_VERSION_REVISION)

FIND_PACKAGE_HANDLE_STANDARD_ARGS(CapsImage DEFAULT_MSG
	CAPSIMAGE_LIBRARY CAPSIMAGE_INCLUDE_DIR CAPSIMAGE_VERSION CAPSIMAGE_VERSION_RELEASE CAPSIMAGE_VERSION_REVISION)

if(CAPSIMAGE_FOUND)
	set(CAPSIMAGE_LIBRARIES ${CAPSIMAGE_LIBRARY})
	set(CAPSIMAGE_INCLUDE_DIRS ${CAPSIMAGE_INCLUDE_DIR})
  if(NOT TARGET SPS::CapsImage)
    add_library(SPS::CapsImage INTERFACE IMPORTED)
    set_target_properties(SPS::CapsImage PROPERTIES
	    INTERFACE_INCLUDE_DIRECTORIES "${CAPSIMAGE_INCLUDE_DIR}"
	    INTERFACE_LINK_LIBRARIES "${CAPSIMAGE_LIBRARY}"
	    VERSION "${CAPSIMAGE_VERSION}")
  endif()
endif()
	
unset(_cmake_find_capsimage_output)
